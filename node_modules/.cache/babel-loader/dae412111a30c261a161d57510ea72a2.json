{"ast":null,"code":"// storeは状態を管理するグローバルで単一のオブジェクトである。\n// 開発においての一番最初にstoreを作成する処理を作成する。\n// Redux内にある同名の createStore という関数を内部で使用するので、as を使って “reduxCreateStore” という名前で importする。\n// loggerについて解説　→　https://qiita.com/tataric12/items/3bdf2f3132948e3d75e3\nimport { createStore as reduxCreateStore, applyMiddleware, combineReducers } from \"redux\";\nimport logger from \"redux-logger\";\nimport { todoReducer } from \"./reducers/Todo\"; // 今回使用する全ての状態を管理するstoreをcreateStoreにて作成\n// createStore関数を他で使うため、exportする\n\nexport default function createStore() {\n  const store = reduxCreateStore( // 基本的には複数のReducerを利用するため、あらかじめcombineReducers を使って複数のReducerを使えるようにする。\n  combineReducers({\n    todo: todoReducer\n  }), applyMiddleware(logger));\n  return store;\n}","map":{"version":3,"sources":["/Users/ipad/react-redux-todo/src/createStore.js"],"names":["createStore","reduxCreateStore","applyMiddleware","combineReducers","logger","todoReducer","store","todo"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,SAASA,WAAW,IAAIC,gBAAxB,EAA0CC,eAA1C,EAA2DC,eAA3D,QAAkF,OAAlF;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,WAAT,QAA4B,iBAA5B,C,CAGA;AACA;;AACA,eAAe,SAASL,WAAT,GAAuB;AAClC,QAAMM,KAAK,GAAGL,gBAAgB,EAE1B;AACAE,EAAAA,eAAe,CAAC;AACZI,IAAAA,IAAI,EAAEF;AADM,GAAD,CAHW,EAM1BH,eAAe,CACXE,MADW,CANW,CAA9B;AAWA,SAAOE,KAAP;AACH","sourcesContent":["// storeは状態を管理するグローバルで単一のオブジェクトである。\n// 開発においての一番最初にstoreを作成する処理を作成する。\n// Redux内にある同名の createStore という関数を内部で使用するので、as を使って “reduxCreateStore” という名前で importする。\n// loggerについて解説　→　https://qiita.com/tataric12/items/3bdf2f3132948e3d75e3\n\nimport { createStore as reduxCreateStore, applyMiddleware, combineReducers } from \"redux\";\nimport logger from \"redux-logger\"\nimport { todoReducer } from \"./reducers/Todo\";\n\n\n// 今回使用する全ての状態を管理するstoreをcreateStoreにて作成\n// createStore関数を他で使うため、exportする\nexport default function createStore() {\n    const store = reduxCreateStore(\n\n        // 基本的には複数のReducerを利用するため、あらかじめcombineReducers を使って複数のReducerを使えるようにする。\n        combineReducers({\n            todo: todoReducer,\n        }),\n        applyMiddleware(\n            logger,\n        )\n    );\n\n    return store;\n}"]},"metadata":{},"sourceType":"module"}